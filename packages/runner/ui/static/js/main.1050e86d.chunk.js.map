{"version":3,"sources":["utils/index.ts","api/index.ts","api/web3.ts","components/widget/common_style.ts","components/widget/fresh_button.tsx","components/widget/notify.tsx","components/home/Home.tsx","router.tsx","reportWebVitals.ts","index.tsx"],"names":["convertTimestamp","ts","Date","parseInt","toLocaleTimeString","hex2dec","num","BigInt","toString","dec2hex","shannon2CKB","JSBI","divide","CKB2shannon","isObjectInArray","item","arr","i","length","JSON","stringify","arrayBufferToBuffer","ab","buf","Buffer","alloc","byteLength","view","Uint8Array","get_env_mode","mode","asyncSleep","ms","Promise","r","setTimeout","axios","defaults","withCredentials","Api","base_url","this","utils","config","development_server_url","production_server_url","a","get","params","res","data","eth_address","to_id","amount","fee","post","contract_code","raw_l2tx","signature","type","l2_script_args","tx_hash","account_id","Web3Api","url","web3_server_url","jsonrpc","id","method","headers","response","result","util","getTransactionReceipt","tx_receipt","console","log","styles","page","maxWidth","margin","textAlign","content","width","marginTop","main_color","color","background_color","wide_card","padding","wide_card_title","blockquote","background","borderLeft","clear_path","clear","li","listStyleType","marginLeft","ul","paddingLeft","status_bar","justifyContent","status_bar_title","float","fontSize","fontWeight","status_bar_btn","marginRight","modal","maxHeight","overflowY","height","display","alignItems","paper","backgroundColor","border","boxShadow","outline","hidden_btn","cursor","single_line_code","borderRadius","explain_text","input_wrap","marginBottom","input","overflowX","verticalAlign","describe_img_wrapper","describe_img","describe_img_footnote","commonStyle","loader","animation","btn","btndiv","btn_hover","Loader","style","FreshButton","props","useState","ref","useRef","isLoadingMissed","undefined","isLoading","showLoader","setShowLoader","setIsLoading","isHover","setIsHover","extendedOnClick","onClick","useEffect","timeout","clearTimeout","fadeOutProps","useSpring","opacity","fadeInProps","toogleHover","wh_style","hover_style","btn_style","mystyle","custom_style","final_style","onMouseEnter","onMouseLeave","div","text","commomStyle","panel","toast","NotifyPlace","toastStyle","notify","message","error","success","warn","info","dark","common_styles","header","minHeight","address","balance","button","contract_container","contract_li","descrip_sudt","placeholder_for_experimental","Home","inputFile","selectedAddress","setSelectedAddress","setBalance","sudtBalance","setSudtBalance","deployedContracts","setDeployedContracts","setRollupTypeHash","setEthAccountLockConfig","sudtToken","setSudtToken","window","ethereum","request","getRollupTypeHash","getEthAccountLockConfig","getBalance","getSudtToken","on","accounts","web3Api","getSudtBalance","api","status","sudt_token","deposit","depositSudt","deposit_sudt","l2_sudt_script_hash","issueToken","clickUploadContract","current","click","_deployContract","contractCode","godwokenWeb3","transactionParameters","nonce","gasPrice","gas","to","from","value","chainId","txHash","waitForTransactionReceipt","txReceipt","contractAddr","contractAddress","oldArray","deployContract","e","codefile","target","files","readContractCode","code_hex","deployErc20ProxyContract","contract_code_with_constructor","resolve","reject","reader","FileReader","onload","event","onerror","err","onabort","readAsBinaryString","className","Grid","container","spacing","xs","onChange","hidden","language","gruvboxDark","join","slice","MyRouter","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1050e86d.chunk.js","sourcesContent":["import JSBI from 'jsbi';\nimport { mode } from '../config/constant.json';\n\nconst convertTimestamp = (ts: string | number) => {\n    if(typeof ts === 'string'){\n        return new Date(parseInt(ts)).toLocaleTimeString();\n    }else{\n        return new Date(ts).toLocaleTimeString();\n    }\n}\n\nconst hex2dec =  (num: string) => {\n    return BigInt(num).toString(10);\n}\n\nconst dec2hex = (num: string) => {\n    return BigInt(num).toString(16);\n}\n\nconst shannon2CKB = (num: number | string | BigInt) => {\n    // return BigInt(num).toString(10).substring(0, BigInt(num).toString(10).length-7) \n    //        + '.' + \n    //        BigInt(num).toString(10).substring(BigInt(num).toString(10).length-7);\n    return JSBI.divide(JSBI.BigInt(num), JSBI.BigInt(100000000)).toString(10);\n}\n\nconst CKB2shannon = (num: number | string | BigInt) => {\n    return BigInt(num).toString(10) + '00000000';\n}\n\n// notice: the order of key-value pair in Object\n// does matter in this funciton.\n// (meaning that they will not be the same and return false)\nconst isObjectInArray = (item: object, arr: object[]) => {\n   for(let i=0;i<arr.length;i++){\n        if( JSON.stringify(arr[i]) === JSON.stringify(item) ){\n            return true;\n        } \n   }\n   return false;\n}\n\nconst arrayBufferToBuffer = (ab: ArrayBuffer) => {\n    var buf = Buffer.alloc(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buf.length; ++i) {\n      buf[i] = view[i];\n    }\n    return buf;\n}\n\nconst get_env_mode = () => {\n    //todo: maybe auto test using os === 'ubuntu' or something.\n    return mode === 'development' ? 'development' : 'production';\n}\n\nconst asyncSleep = (ms = 0) => {\n    return new Promise((r) => setTimeout(r, ms));\n }\n\nexport default {\n    convertTimestamp: convertTimestamp,\n    hex2dec: hex2dec,\n    dec2hex: dec2hex,\n    shannon2CKB: shannon2CKB,\n    CKB2shannon: CKB2shannon,\n    isObjectInArray: isObjectInArray,\n    arrayBufferToBuffer: arrayBufferToBuffer,\n    get_env_mode: get_env_mode,\n    asyncSleep: asyncSleep,\n}\n","import { RawL2Transaction } from '@godwoken-examples/godwoken';\nimport axios from 'axios';\nimport config from '../config/constant.json';\nimport { OpType } from '../types/polyjuice';\nimport utils from '../utils/index';\n\naxios.defaults.withCredentials = true;\n\nclass Api{\n\n    base_url: string;\n\n    constructor(){\n        this.base_url = utils.get_env_mode() === 'development' ? config.development_server_url : config.production_server_url;\n    };\n\n    async getRollupTypeHash(){\n        let res = await axios.get(`${this.base_url}/get_rollup_type_hash`, { \n            params:{\n            }\n        });\n        return res.data;\n    };\n    \n    async getEthAccountLockConfig(){\n        let res = await axios.get(`${this.base_url}/get_eth_acccount_lock`, {\n            params:{\n            }\n        });\n        return res.data;\n    };\n\n    async getBalance(eth_address: string){\n        let res = await axios.get(`${this.base_url}/get_layer2_balance`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    };  \n\n    async getSudtBalance(eth_address: string){\n        let res = await axios.get(`${this.base_url}/get_layer2_sudt_balance`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    };  \n\n    async issueToken(){\n        let res = await axios.get(`${this.base_url}/issue_token`, { \n            params:{\n            }\n        });\n        return res.data; \n    }\n\n    async getSudtToken(){\n        let res = await axios.get(`${this.base_url}/get_sudt_token`, {\n\n        });\n        return res.data;\n    }\n\n    async deposit(eth_address: string){\n        let res = await axios.get(`${this.base_url}/deposit`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    }; \n\n    async deposit_sudt(eth_address: string){\n        let res = await axios.get(`${this.base_url}/deposit_sudt`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    }\n\n  async transfer(to_id: string, amount: string, fee: string, eth_address: string) {\n    let res = await axios.post(`${this.base_url}/transfer`, {\n      data: {\n        to_id: to_id,\n        amount: amount,\n        fee: fee,\n        eth_address: eth_address,\n      }\n    });\n    return res.data;\n  }\n\n    async deployContract(contract_code: string, eth_address: string ){\n        let res = await axios.post(`${this.base_url}/deploy_contract`, { \n            data:{\n                contract_code: contract_code,\n                eth_address: eth_address,\n            }\n        });\n        return res.data;\n    };\n\n    async deployErc20ProxyContract(eth_address: string){\n        let res = await axios.post(`${this.base_url}/deploy_erc20_proxy_contract`, { \n            data:{\n                eth_address: eth_address,\n            }\n        });\n        return res.data;\n    }; \n\n    async deploySudtContract() {\n        let res = await axios.post(`${this.base_url}/deploy_sudt_contract`, { \n            data:{\n            }\n        });\n        return res.data; \n    }\n\n    async sendL2Transaction(raw_l2tx: RawL2Transaction, signature: string, type: OpType, l2_script_args?: string){\n        let res = await axios.post(`${this.base_url}/send_l2_tx`, { \n            data:{\n                raw_l2tx: raw_l2tx,\n                signature: signature,\n                type: type,\n                l2_script_args: l2_script_args\n            }\n        });\n        return res.data;\n    };\n\n    async getTransactionReceipt(tx_hash: string){\n        let res = await axios.get(`${this.base_url}/get_tx_receipt`, { \n            params:{\n                tx_hash: tx_hash\n            }\n        });\n        return res.data;\n    }\n    //\n    async getContractAddrByAccountId(account_id: string){\n        let res = await axios.get(`${this.base_url}/get_contract_addr_by_account_id`, { \n            params:{\n                account_id: account_id\n            }\n        });\n        return res.data;\n    }\n\n}\n\nexport default Api;\n","import axios from 'axios';\nimport config from '../config/constant.json';\nimport util from '../utils/index';\n\naxios.defaults.withCredentials = false;\n\nexport default class Web3Api{\n\n    url: string;\n\n    constructor(){\n        this.url = config.web3_server_url;\n    };\n\n\n    async getBalance(eth_address: string){\n        let response = await axios.post(this.url, {\n            jsonrpc: '2.0',\n            id: + new Date(),\n            method: 'eth_getBalance',\n            params: [eth_address],\n        }, {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n            \n        });\n        return response.data.result;\n    }\n\n    async getTransactionReceipt(tx_hash: string){\n        let response = await axios.post(this.url, {\n            jsonrpc: '2.0',\n            id: + new Date(),\n            method: 'eth_getTransactionReceipt',\n            params: [tx_hash],\n        }, {\n              headers: {\n                'Content-Type': 'application/json',\n              },\n        });\n        return response.data.result;\n    }\n\n    async waitForTransactionReceipt(tx_hash: string){\n        while (true) {\n          await util.asyncSleep(1000);\n          const tx_receipt = await this.getTransactionReceipt(\n            tx_hash\n          );\n          console.log(`tx_receipt: ${tx_receipt}`);\n      \n          if (tx_receipt) {\n            break;\n          }\n        }\n        return;\n    }\n\n}\n","const styles = {\n    page: {\n        maxWidth: '700px',\n        margin: 'atuo',\n        textAlign: 'center' as const\n    },\n    content: {\n        width: '100%',\n        marginTop: '20px',\n        textAlign: 'left' as const\n    },\n    main_color: {\n        color: '#3CC68A'\n    },\n    background_color: {\n        color: '#282c34'\n    },\n    wide_card: {\n        padding: '10px',\n        textAlign: 'left' as const\n    },\n    wide_card_title: {\n        color: '#3CC68A',\n        textAlign: 'center' as const\n    },\n    blockquote: {\n        background: '#f9f9f9',\n        borderLeft: '10px solid #3CC68A',\n        margin: '1.5em 10px',\n        padding: '1em 2em',\n        color: 'black',\n    },\n    clear_path: {\n        clear: 'both' as const\n    },\n    li: {\n        listStyleType: 'none',\n        marginLeft: '0'\n    },\n    ul: {\n        listStyleType: 'none',\n        paddingLeft: '0'\n    },\n    status_bar: {\n        width: '100%',\n        padding: '5px',\n        margin: '10px 0px',\n        clear: 'both' as const,\n        justifyContent: 'center' as const,\n    },\n    status_bar_title: {\n        float: 'left' as const,\n        fontSize: '16px',\n        fontWeight: 'bolder' as const\n    },\n    status_bar_btn: {\n        float: 'right' as const,\n        textAlign: 'center' as const,\n        marginRight: '20px'\n    },\n    modal: {\n      maxWidth: '700px',\n      maxHeight: '80%',\n      overflowY: 'scroll' as const,\n      padding: '20px',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: '0 auto'\n    },\n    paper: {\n      backgroundColor: 'gray',\n      border: '2px solid #000',\n      boxShadow: '10px',\n      padding: '10px',\n      width: '100%',\n      outline: 'none'\n    },\n    hidden_btn: {\n      width:'100%', \n      border:'0', \n      backgroundColor: 'rgb(0,0,0, 0)',\n      height: '0',\n      cursor: 'auto'\n    },\n    single_line_code: {\n        background: 'white',\n        color: 'gray',\n        padding: '2px',\n        borderRadius: '5px',\n    },\n    explain_text: {\n        fontSize: '14px',\n        color: 'gray',\n        margin: '20px',\n    },\n    input_wrap: {\n        padding: '2px 5px',\n        marginBottom: '10px',\n        display: 'block',\n        background: 'white',\n    },\n    input: {\n        width: '100%',\n        outline: 'none',\n        fontSize: '14px',\n        border: '0',\n        overflowX: 'scroll' as const,\n        verticalAlign: 'text-bottom',\n    },\n    describe_img_wrapper: {\n        maxWidth: '100px',\n        margin: '40px auto',\n    },\n    describe_img: {\n        width: '100%',\n        height: '100%',\n        background: '#282c34',\n    },\n    describe_img_footnote: {\n        textAlign: 'center' as const,\n        fontSize: '11px',\n    }\n}\n\nexport default styles;","/**** \n * improve: \n *  - [x] every button instance of this componet  must create its own isLoading and setIsLoading, this is ugly and unacceptable.\n *  - [ ] should provide css customize option for user\n *  - [ ] try export this as a standalone button for re-use\n */\nimport React, {useState, useEffect, useRef, CSSProperties} from \"react\";\nimport commonStyle from \"./common_style\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./button.css\";\n\nexport type Props = {\n    custom_style?: CSSProperties\n    isLoading?: boolean\n    text: string\n    onClick: () => void\n}\n\nconst styles = {...commonStyle, ...{\n    loader: {\n        border: '4px solid rgba(60, 198, 138, 0.2)',\n        borderLeft: '4px solid',\n        animation: 'load 1s infinite linear',\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        margin: '0 auto'\n    },\n    btn: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: 'rgb(255,255,255, 0)',\n        cursor: 'pointer'\n    },\n    btndiv: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%'\n    },\n    btn_hover: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: commonStyle.main_color.color,\n        cursor: 'pointer'\n    }\n}}\n\nconst Loader = () => <div style={styles.loader} />;\n\nexport default function FreshButton(props: Props){\n\n    /* Capture the dimensions of the button before the loading happens\n    so it doesn’t change size when showing the loader */\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const ref = useRef<HTMLButtonElement>(null);\n\n\n    const isLoadingMissed = props.isLoading === undefined;\n\n    const [showLoader, setShowLoader] = useState(false);\n    const [isLoading, setIsLoading] = useState( isLoadingMissed ? false : props.isLoading);\n    const [isHover, setIsHover] = useState(false);\n\n    const extendedOnClick = async () => {\n      if(isLoadingMissed)setIsLoading(true);\n      await props.onClick();\n      if(isLoadingMissed)setIsLoading(false);\n    }\n\n    useEffect(() => {\n        if(props.isLoading !== undefined)\n          setIsLoading(props.isLoading);\n\n        if (isLoading) {\n          setShowLoader(true);\n        }\n    \n        // Show loader a bits longer to avoid loading flash\n        if (!isLoading && showLoader) {\n          const timeout = setTimeout(() => {\n            setShowLoader(false);\n          }, 400);\n    \n          return () => {\n            clearTimeout(timeout);\n          };\n        }\n      }, [props.isLoading, isLoading, showLoader]);\n  \n    // Hooks used to fade in/out the loader or the button contents\n    const fadeOutProps = useSpring({ opacity: showLoader ? 1 : 0 });\n    const fadeInProps = useSpring({ opacity: showLoader ? 0 : 1 });\n    \n    /*\n    useEffect(() => {\n        if (ref.current && ref.current.getBoundingClientRect().width) {\n          setWidth(ref.current.getBoundingClientRect().width);\n        }\n        if (ref.current && ref.current.getBoundingClientRect().height) {\n          setHeight(ref.current.getBoundingClientRect().height);\n        }\n      }, [props.text]);\n    */\n\n    const toogleHover = () => {\n        setIsHover(!isHover);\n    }\n\n    const wh_style = width && height\n    ? {\n        width: `${width}px`,\n        height: `${height}px`,\n      }\n    : {};\n    const hover_style = isHover ? styles.btn_hover : styles.btn;\n    const btn_style = {...hover_style, ...wh_style};\n    const mystyle = props.custom_style === \"undefined\" ? {} : props.custom_style; \n    const final_style = {...btn_style, ...mystyle};\n\n    return(\n      <button style={final_style} onClick={extendedOnClick} onMouseEnter={toogleHover} onMouseLeave={toogleHover} ref={ref} >\n      {showLoader ? (\n            <animated.div style={fadeOutProps}>\n              <Loader />\n            </animated.div>\n          ) : (\n            <animated.div style={fadeInProps}>{props.text}</animated.div>\n      )}\n      </button>\n    )\n}","import React, { useRef, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './notify.css';\nimport commomStyle from '../widget/common_style';\n\nconst styles = {...commomStyle, ...{\n    panel: {\n        //maxWidth: \"700px\",\n    },\n    toast: {\n        padding: '10px',\n        fontSize: '14px',\n        \n    }\n}};\n\nexport default function NotifyPlace(){\n    return(\n        <div>\n            <ToastContainer style={styles.panel} toastStyle={styles.toast} />\n        </div>\n    )\n}\n\nexport type MsgType = 'error' | 'success' | 'info' | 'warning' | 'dark';\n\nconst notify = (message: string, type?: MsgType) => {\n    switch (type) {\n        case 'error':\n            toast.error(message);\n            break;\n        \n        case 'success':\n            toast.success(message);\n            break;\n        \n        case 'warning':\n            toast.warn(message);\n            break;\n        \n        case 'info':\n            toast.info(message);\n            break;\n\n        case 'dark':\n            toast.dark(message);\n            break;\n\n        default:\n            toast.error(message);\n            break;\n    }\n}\n\nexport { notify }","import React, { useEffect, useRef, useState } from 'react';\nimport './Home.css';\nimport Api from '../../api/index';\nimport Web3Api from '../../api/web3';\nimport FreshButton from '../widget/fresh_button';\nimport NotifyPlace, {notify} from '../widget/notify';\nimport { MsgSignType  } from '../../types/polyjuice';\nimport { Grid } from '@material-ui/core';\nimport common_styles from '../widget/common_style';\nimport utils from '../../utils/index';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { gruvboxDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\ndeclare global {\n  interface Window { ethereum: any; }\n}\n\nconst styles = {...common_styles, ...{\n  header: {\n    minHeight: '300px',\n    margin: '10px',\n  },\n  address: {\n    color: '#a0eec0',\n  },\n  balance: {\n    color: 'whitesmoke',\n  },\n  button: {\n    fontSize: '25px',\n    width: '100%',\n    maxWidth: '700px',\n    margin: '10px',\n    padding: '0.7rem 1.2rem',\n  },\n  contract_container: {\n    width: '100%',\n    maxWidth: '700px',\n    margin: '30px auto',\n    textAlign: 'left' as const,\n    fontSize: '15px',\n    border: '1px solid gray',\n    color: 'gray',\n  },\n  contract_li: {\n    listStyleType: 'none' as const,\n  },\n  descrip_sudt: {\n    width: '600px',\n    fontSize: '13px',\n    margin: '30px auto',\n    textAlign: 'left' as const,\n  },\n  placeholder_for_experimental: {\n    width: '700px',\n    margin: '0 auto',\n    marginTop: '50px',\n  }\n}\n}\n\nexport interface EthAccountLockConfig {\n  code_hash: string;\n  hash_type: 'hash' | 'type';\n}\n\nfunction Home() {\n  const inputFile = useRef<HTMLInputElement>(null);\n  const [selectedAddress, setSelectedAddress] = useState<string>();\n  const [balance, setBalance] = useState<string>('0');\n  const [sudtBalance, setSudtBalance] = useState<string>('0');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [deployedContracts, setDeployedContracts] = useState<string[]>([]);\n  const [rollupTypeHash, setRollupTypeHash] = useState<string>();\n  const [ethAccountLockConfig, setEthAccountLockConfig] = useState<EthAccountLockConfig>();\n  const [sudtToken, setSudtToken] = useState<string>();\n\n  useEffect(() => {\n    // connect account\n    if(window.ethereum){\n      window.ethereum.request({ method: 'eth_requestAccounts' });\n      setSelectedAddress(window.ethereum.selectedAddress);\n    };\n    getRollupTypeHash();\n    getEthAccountLockConfig();\n  }, []);\n\n  useEffect(() => {\n    if(selectedAddress){\n      getBalance();\n      //getSudtBalance();\n      getSudtToken();\n    };\n  }, [selectedAddress]);\n\n  // detect metamask account changes.\n  window.ethereum.on('accountsChanged', function (accounts: any) {\n    setSelectedAddress(accounts[0]);\n  });\n\n  const getBalance = async () => {\n    if(!selectedAddress)return;\n    const web3Api = new Web3Api(); \n    try {\n      console.log(selectedAddress);\n      const data = await web3Api.getBalance(selectedAddress);\n      if(!data)\n        return console.log(`balance is undefinded.`);\n        \n      const balance = BigInt(data).toString();\n      console.log(balance);\n      await setBalance(utils.shannon2CKB(balance));\n      console.log(utils.shannon2CKB(balance));\n    } catch (error) {\n      console.log(`get bablance error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }\n  }\n\n  const getSudtBalance = async () => {\n    if(!selectedAddress)return;\n    const api = new Api();\n    try {\n      const res = await api.getSudtBalance(selectedAddress);\n      if(res.status !== 'ok')\n        return notify(`failed to get sudt balance from account. issue sudt token then ${JSON.stringify(res.error)}`);\n      await setSudtBalance(utils.shannon2CKB(res.data));\n      console.log(utils.shannon2CKB(res.data));\n    } catch (error) {\n      console.log(`get sudt bablance error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    }\n  }\n\n  const getSudtToken = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getSudtToken();\n      console.log(res);\n      if(res.status !== 'ok')\n        return console.log(`failed to get sudt token. ${JSON.stringify(res.error)}`);\n\n      await setSudtToken(res.data.sudt_token);\n      await getSudtBalance();\n    } catch (error) {\n      console.log(`get sudt token error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const getRollupTypeHash = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getRollupTypeHash();\n      if(res.status !== 'ok')\n        return notify(`failed to get rollup type hash. ${JSON.stringify(res.error)}`);\n      setRollupTypeHash(res.data);\n    } catch (error) {\n      console.log(`get rollup type hash error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const getEthAccountLockConfig = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getEthAccountLockConfig();\n      if(res.status !== 'ok')\n        return notify(`failed to get eth_account_lock config. ${JSON.stringify(res.error)}`);\n      setEthAccountLockConfig(res.data);\n    } catch (error) {\n      console.log(`get eth account lock error`);\n      console.log(error);\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const deposit =  async () => {\n    if(!selectedAddress)return notify(`metamask account not found.`);\n    const api = new Api();\n    try {\n      const res = await api.deposit(selectedAddress);\n      console.log(res);\n      if(res.status === 'ok'){\n        notify(`your account id: ${res.data.account_id}`, 'success');\n        await getBalance();\n      }else{\n        notify(JSON.stringify(res.error));\n      }\n    } catch (error) {\n      notify(JSON.stringify(error));\n    }\n  }\n\n const depositSudt =  async () => {\n   if(!selectedAddress)return notify(`metamask account not found.`);\n   const api = new Api();\n   try {\n     const res = await api.deposit_sudt(selectedAddress);\n     console.log(res);\n     if(res.status === 'ok'){\n       notify(`your account id: ${res.data.account_id}`, 'success');\n       console.log(`res.data.l2_sudt_script_hash: ${res.data.l2_sudt_script_hash}`)\n       await getSudtBalance();\n     }else{\n       notify(JSON.stringify(res.error));\n     }\n   } catch (error) {\n     notify(JSON.stringify(error));\n   }\n }\n\n const deploySudtContract = async () => {\n   const api = new Api();\n   try{\n     const res = await api.deploySudtContract();\n     console.log(res);\n     if(res.status === 'ok'){\n       notify('ok', 'success');\n     }else{\n       notify(JSON.stringify(res.error, null, 2));\n     }\n   } catch (error) {\n     notify(JSON.stringify(error));\n   }\n }\n\n const issueToken = async () => {\n   const api = new Api();\n   try{\n     const res = await api.issueToken();\n     console.log(res);\n     if(res.status === 'ok'){\n       notify(`issue a sudt token: ${res.data.sudt_token}`, 'success');\n     }else{\n       notify(JSON.stringify(res.error, null, 2));\n     }\n   } catch (error) {\n     notify(JSON.stringify(error));\n   }\n }\n\n    // const transfer = async () => {\n    //     if(!selectedAddress)return notify(`metamask account not found.`);\n    //     const api = new Api();\n    //     try {\n    //         /* FIXME: get those fields from form instead */\n    //         const to_id = '1'; /* CKB token sudt_id account */\n    //         const amount = '500';\n    //         const fee = '50';\n    //         const res = await api.transfer(window.ethereum.selectedAddress);\n    //         if(res.status !== 'ok')return notify(JSON.stringify(res));\n\n    //         const data: MsgSignType = res.data;\n    //         var signature;\n    //         try {\n    //             signature = await window.ethereum.request({\n    //                 method: 'personal_sign',\n    //                 params: [data.message, window.ethereum.selectedAddress],\n    //             });\n    //         } catch (error) {\n    //             console.log(error);\n    //             return notify(`could not finished signing process. \\n\\n ${JSON.stringify(error)}`);\n    //         }\n\n    //         // submit the signed tx to godwoken\n    //         const tx_res = await api.sendL2Transaction(data.raw_l2tx, signature, data.type, data.l2_script_args);\n    //         if(tx_res.status !== 'ok'){\n    //             console.log(tx_res);\n    //             return notify(JSON.stringify(tx_res.error));\n    //         }\n    //         notify('transfer success', 'success');\n    //     } catch (error) {\n    //         notify(JSON.stringify(error));\n    //     }\n    // }\n\n  const clickUploadContract = async () => {\n    if(!inputFile)return notify(`input ref not found.`);\n    inputFile.current!.click();\n  } \n\n  const _deployContract = async (contractCode: string) => {\n    if(!contractCode)return notify(`upload contract binary file first!`);\n    if(!selectedAddress)return notify(`window.ethereum.selectedAddress not found.`);\n\n    const godwokenWeb3 = new Web3Api();\n    try {\n      const transactionParameters = {\n        nonce: '0x0', // ignored by MetaMask\n        gasPrice: '0x9184e72a000', // customizable by user during MetaMask confirmation.\n        gas: '0x2710', // customizable by user during MetaMask confirmation.\n        to: '0x', // Required except during contract publications.\n        from: window.ethereum.selectedAddress, // must match user's active address.\n        value: '0x00', // Only required to send ether to the recipient from the initiating external account.\n        data: contractCode, // Optional, but used for defining smart contract creation and interaction.\n        chainId: '0x3', // Used to prevent transaction reuse across blockchains. Auto-filled by MetaMask.\n      };\n      const txHash = await window.ethereum.request({\n        method: 'eth_sendTransaction',\n        params: [transactionParameters],\n      });\n      console.log(`txHash: ${txHash}`);\n      \n      await godwokenWeb3.waitForTransactionReceipt(txHash);\n\n      const txReceipt = await godwokenWeb3.getTransactionReceipt(txHash); \n      console.log(`txReceipt: ${JSON.stringify(txReceipt, null, 2)}`);\n\n      const contractAddr = txReceipt.contractAddress; \n      console.log(`contract address: ${contractAddr}`);\n\n      notify(`your contract address: ${contractAddr}`, 'success');\n      setDeployedContracts(oldArray => [...oldArray, contractAddr]);\n    } catch (error) {\n      console.log(error);\n      return notify(`could not finished signing process. \\n\\n ${JSON.stringify(error)}`);\n    }\n  }\n\n  const deployContract = async (e: any) => {\n    const codefile = e.target.files[0]; \n    setIsLoading(true);\n    const res: any = await readContractCode(codefile);\n    if(res.status !== 'ok'){\n      setIsLoading(false);\n      return notify(`can not read contract code from file.`);\n    };\n\n    const code_hex = res.data;\n    console.log('reading contract code hex:');\n    console.log(code_hex);\n    await _deployContract(code_hex);\n    setIsLoading(false);\n  }\n\n  const deployErc20ProxyContract = async () => {\n    if(!selectedAddress)return notify(`window.ethereum.selectedAddress not found.`);\n\n    const api = new Api();\n    const godwokenWeb3 = new Web3Api();\n    try {\n      const res: any = await api.deployErc20ProxyContract(selectedAddress); \n      if(res.status !== 'ok')\n        notify(JSON.stringify(res.error, null, 2));\n\n      const contract_code_with_constructor = res.data;\n      console.log(JSON.stringify(contract_code_with_constructor, null, 2));\n\n      try {\n        const transactionParameters = {\n          nonce: '0x0', // ignored by MetaMask\n          gasPrice: '0x9184e72a000', // customizable by user during MetaMask confirmation.\n          gas: '0x2710', // customizable by user during MetaMask confirmation.\n          to: '0x', // Required except during contract publications.\n          from: window.ethereum.selectedAddress, // must match user's active address.\n          value: '0x00', // Only required to send ether to the recipient from the initiating external account.\n          data: contract_code_with_constructor, // Optional, but used for defining smart contract creation and interaction.\n          chainId: '0x3', // Used to prevent transaction reuse across blockchains. Auto-filled by MetaMask.\n        };\n        const txHash = await window.ethereum.request({\n          method: 'eth_sendTransaction',\n          params: [transactionParameters],\n        });\n        console.log(`txHash: ${txHash}`);\n\n        await godwokenWeb3.waitForTransactionReceipt(txHash);\n\n        const txReceipt = await godwokenWeb3.getTransactionReceipt(txHash); \n        console.log(`txReceipt: ${JSON.stringify(txReceipt, null, 2)}`);\n\n        const contractAddr = txReceipt.contractAddress; \n        console.log(`contract address: ${contractAddr}`);\n\n        notify(`your contract address: ${contractAddr}`, 'success');\n        setDeployedContracts(oldArray => [...oldArray, contractAddr]);\n      } catch (error) {\n        console.log(error);\n        return notify(`could not finished signing process. \\n\\n ${JSON.stringify(error)}`);\n      }\n    } catch (error) {\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const readContractCode = (codefile: Blob) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event: any) => {\n            const code_hex = `0x${event.target.result}`;\n            resolve({status:'ok', data: code_hex});\n        };\n        reader.onerror = (err) => {\n            resolve({status:'failed', error: err});\n        };\n        reader.onabort = () => {\n          resolve({status:'failed', error: 'user abort.'});\n        }\n        reader.readAsBinaryString(codefile);\n    });  \n  } \n\n// const web3CodeString = `\n// const godwoken_rpc_url = 'http://127.0.0.1:8024';\n// const provider_config =  {\n//   godwoken: {\n//       rollup_type_hash: \"${rollupTypeHash}\",\n//       eth_account_lock: {\n//           code_hash: \"${ethAccountLockConfig?.code_hash}\",\n//           hash_type: \"${ethAccountLockConfig?.hash_type}\"\n//       }\n//   }\n// }\n// const provider = new PolyjuiceHttpProvider(godwoken_rpc_url, provider_config);\n// const web3 = new Web3(provider);\n//                   `\n\n  return (\n    <div>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NotifyPlace />\n          <Grid container spacing={3}>\n            <Grid item xs={12} style={styles.header}>\n              <h3>Your EthAddress: {selectedAddress} </h3>\n              <div>Balance: <span style={styles.balance}>{balance} CKB </span></div>\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deposit CKB\"} onClick={deposit} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deploy ETH Contract\"} isLoading={isLoading} onClick={clickUploadContract} custom_style={styles.button} />\n              <input\n                  type=\"file\"\n                  ref={inputFile}\n                  onChange={deployContract}\n                  hidden\n              />\n            </Grid>\n          </Grid>\n\n          <hr></hr>\n\n\n          <Grid container spacing={3}>\n            <Grid item xs={12} style={styles.contract_container}>\n              Contract Address: \n              <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n                {deployedContracts.length > 0 ? deployedContracts.join('\\n') : 'nothing.'}\n              </SyntaxHighlighter>\n            </Grid>\n          </Grid>\n\n          <hr></hr>\n\n\n\n          <div style={styles.placeholder_for_experimental}>\n            <hr style={{width: '100%'}}></hr>\n          </div>\n\n          <h4> Sudt Section (experimental) </h4>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <div>Balance: <span style={styles.balance}>{sudtBalance} Sudt </span></div>\n            </Grid>\n          </Grid>\n\n          <hr></hr>\n\n         <Grid container spacing={5}>\n            <Grid item xs={12}>\n              <div style={styles.descrip_sudt}>\n                <p>you should issue sudt token first if sudt token is empty.</p>\n                <p>depositting sudt by defaut will give you 400 sudt each time. and the capacity of ckb required is also 400 ckb, so the balance of your layer2 ckb will also increase. </p>\n              </div>\n            </Grid>\n          </Grid> \n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <h5>Sudt Token:  {sudtToken ? sudtToken?.slice(0,6): ''}..{sudtToken ? sudtToken?.slice(60) : ''}</h5>\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Issue Sudt Token\"} onClick={issueToken} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deposit Sudt\"} onClick={depositSudt} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deploy Erc20-Proxy Contract\"} onClick={deployErc20ProxyContract} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from './components/home/Home';\n\n\nexport default function MyRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/'>\n          <Home></Home>\n        </Route>\n     </Switch> \n    </BrowserRouter>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyRouter from './router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}