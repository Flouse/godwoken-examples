{"version":3,"sources":["utils/index.ts","api/index.ts","components/widget/common_style.ts","components/widget/fresh_button.tsx","components/widget/notify.tsx","components/home/Home.tsx","router.tsx","reportWebVitals.ts","index.tsx"],"names":["convertTimestamp","ts","Date","parseInt","toLocaleTimeString","hex2dec","num","BigInt","toString","dec2hex","shannon2CKB","JSBI","divide","CKB2shannon","isObjectInArray","item","arr","i","length","JSON","stringify","arrayBufferToBuffer","ab","buf","Buffer","alloc","byteLength","view","Uint8Array","get_env_mode","mode","axios","defaults","withCredentials","Api","base_url","this","utils","config","development_server_url","production_server_url","a","get","params","res","data","eth_address","contract_code","post","raw_l2tx","signature","type","l2_script_args","styles","page","maxWidth","margin","textAlign","content","width","marginTop","main_color","color","background_color","wide_card","padding","wide_card_title","blockquote","background","borderLeft","clear_path","clear","li","listStyleType","marginLeft","ul","paddingLeft","status_bar","justifyContent","status_bar_title","float","fontSize","fontWeight","status_bar_btn","marginRight","modal","maxHeight","overflowY","height","display","alignItems","paper","backgroundColor","border","boxShadow","outline","hidden_btn","cursor","single_line_code","borderRadius","explain_text","input_wrap","marginBottom","input","overflowX","verticalAlign","describe_img_wrapper","describe_img","describe_img_footnote","commonStyle","loader","animation","btn","btndiv","btn_hover","Loader","style","FreshButton","props","useState","ref","useRef","isLoadingMissed","undefined","isLoading","showLoader","setShowLoader","setIsLoading","isHover","setIsHover","extendedOnClick","onClick","useEffect","timeout","setTimeout","clearTimeout","fadeOutProps","useSpring","opacity","fadeInProps","toogleHover","wh_style","hover_style","btn_style","mystyle","custom_style","final_style","onMouseEnter","onMouseLeave","div","text","commomStyle","panel","toast","NotifyPlace","toastStyle","notify","message","error","success","warn","info","dark","common_styles","header","minHeight","address","balance","button","contract_container","contract_li","Home","inputFile","selectedAddress","setSelectedAddress","setBalance","deployedContracts","setDeployedContracts","rollupTypeHash","setRollupTypeHash","window","ethereum","request","method","getRollupTypeHash","getBalance","on","accounts","api","status","deposit","console","log","account_id","clickUploadContract","current","click","_deployContract","contractCode","deployContract","sendL2Transaction","tx_res","contract_address","oldArray","e","codefile","target","files","readContractCode","code_hex","Promise","resolve","reject","reader","FileReader","onload","event","result","onerror","err","onabort","readAsBinaryString","web3CodeString","className","Grid","container","spacing","xs","onChange","hidden","language","gruvboxDark","join","MyRouter","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78e08dcf.chunk.js","sourcesContent":["import JSBI from 'jsbi';\nimport { mode } from '../config/constant.json';\n\nconst convertTimestamp = (ts: string | number) => {\n    if(typeof ts === 'string'){\n        return new Date(parseInt(ts)).toLocaleTimeString();\n    }else{\n        return new Date(ts).toLocaleTimeString();\n    }\n}\n\nconst hex2dec =  (num: string) => {\n    return BigInt(num).toString(10);\n}\n\nconst dec2hex = (num: string) => {\n    return BigInt(num).toString(16);\n}\n\nconst shannon2CKB = (num: number | string | BigInt) => {\n    // return BigInt(num).toString(10).substring(0, BigInt(num).toString(10).length-7) \n    //        + '.' + \n    //        BigInt(num).toString(10).substring(BigInt(num).toString(10).length-7);\n    return JSBI.divide(JSBI.BigInt(num), JSBI.BigInt(100000000)).toString(10);\n}\n\nconst CKB2shannon = (num: number | string | BigInt) => {\n    return BigInt(num).toString(10) + '00000000';\n}\n\n// notice: the order of key-value pair in Object\n// does matter in this funciton.\n// (meaning that they will not be the same and return false)\nconst isObjectInArray = (item: object, arr: object[]) => {\n   for(let i=0;i<arr.length;i++){\n        if( JSON.stringify(arr[i]) === JSON.stringify(item) ){\n            return true;\n        } \n   }\n   return false;\n}\n\nconst arrayBufferToBuffer = (ab: ArrayBuffer) => {\n    var buf = Buffer.alloc(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buf.length; ++i) {\n      buf[i] = view[i];\n    }\n    return buf;\n}\n\nconst get_env_mode = () => {\n    //todo: maybe auto test using os === 'ubuntu' or something.\n    return mode === 'development' ? 'development' : 'production';\n}\n\nexport default {\n    convertTimestamp: convertTimestamp,\n    hex2dec: hex2dec,\n    dec2hex: dec2hex,\n    shannon2CKB: shannon2CKB,\n    CKB2shannon: CKB2shannon,\n    isObjectInArray: isObjectInArray,\n    arrayBufferToBuffer: arrayBufferToBuffer,\n    get_env_mode: get_env_mode\n}\n","import { RawL2Transaction } from '@godwoken-examples/godwoken';\nimport axios from 'axios';\nimport { StringifyOptions } from 'node:querystring';\nimport config from '../config/constant.json';\nimport { OpType } from '../types/polyjuice';\nimport utils from '../utils/index';\n\naxios.defaults.withCredentials = true;\n\nclass Api{\n\n    base_url: string;\n\n    constructor(){\n        this.base_url = utils.get_env_mode() === 'development' ? config.development_server_url : config.production_server_url;\n    };\n\n    async getRollupTypeHash(){\n        let res = await axios.get(`${this.base_url}/get_rollup_type_hash`, { \n            params:{\n            }\n        });\n        return res.data;\n    }; \n\n    async getBalance(eth_address: string){\n        let res = await axios.get(`${this.base_url}/get_layer2_balance`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    };  \n\n    async deposit(eth_address: string){\n        let res = await axios.get(`${this.base_url}/deposit`, { \n            params:{\n                eth_address: eth_address\n            }\n        });\n        return res.data;\n    }; \n\n    async deployContract(contract_code: string, eth_address: StringifyOptions ){\n        let res = await axios.post(`${this.base_url}/deploy_contract`, { \n            data:{\n                contract_code: contract_code,\n                eth_address: eth_address,\n            }\n        });\n        return res.data;\n    };\n\n    async sendL2Transaction(raw_l2tx: RawL2Transaction, signature: string, type: OpType, l2_script_args?: string){\n        let res = await axios.post(`${this.base_url}/send_l2_tx`, { \n            data:{\n                raw_l2tx: raw_l2tx,\n                signature: signature,\n                type: type,\n                l2_script_args: l2_script_args\n            }\n        });\n        return res.data;\n    };\n\n\n\n}\n\nexport default Api;\n","const styles = {\n    page: {\n        maxWidth: '700px',\n        margin: 'atuo',\n        textAlign: 'center' as const\n    },\n    content: {\n        width: '100%',\n        marginTop: '20px',\n        textAlign: 'left' as const\n    },\n    main_color: {\n        color: '#3CC68A'\n    },\n    background_color: {\n        color: '#282c34'\n    },\n    wide_card: {\n        padding: '10px',\n        textAlign: 'left' as const\n    },\n    wide_card_title: {\n        color: '#3CC68A',\n        textAlign: 'center' as const\n    },\n    blockquote: {\n        background: '#f9f9f9',\n        borderLeft: '10px solid #3CC68A',\n        margin: '1.5em 10px',\n        padding: '1em 2em',\n        color: 'black',\n    },\n    clear_path: {\n        clear: 'both' as const\n    },\n    li: {\n        listStyleType: 'none',\n        marginLeft: '0'\n    },\n    ul: {\n        listStyleType: 'none',\n        paddingLeft: '0'\n    },\n    status_bar: {\n        width: '100%',\n        padding: '5px',\n        margin: '10px 0px',\n        clear: 'both' as const,\n        justifyContent: 'center' as const,\n    },\n    status_bar_title: {\n        float: 'left' as const,\n        fontSize: '16px',\n        fontWeight: 'bolder' as const\n    },\n    status_bar_btn: {\n        float: 'right' as const,\n        textAlign: 'center' as const,\n        marginRight: '20px'\n    },\n    modal: {\n      maxWidth: '700px',\n      maxHeight: '80%',\n      overflowY: 'scroll' as const,\n      padding: '20px',\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: '0 auto'\n    },\n    paper: {\n      backgroundColor: 'gray',\n      border: '2px solid #000',\n      boxShadow: '10px',\n      padding: '10px',\n      width: '100%',\n      outline: 'none'\n    },\n    hidden_btn: {\n      width:'100%', \n      border:'0', \n      backgroundColor: 'rgb(0,0,0, 0)',\n      height: '0',\n      cursor: 'auto'\n    },\n    single_line_code: {\n        background: 'white',\n        color: 'gray',\n        padding: '2px',\n        borderRadius: '5px',\n    },\n    explain_text: {\n        fontSize: '14px',\n        color: 'gray',\n        margin: '20px',\n    },\n    input_wrap: {\n        padding: '2px 5px',\n        marginBottom: '10px',\n        display: 'block',\n        background: 'white',\n    },\n    input: {\n        width: '100%',\n        outline: 'none',\n        fontSize: '14px',\n        border: '0',\n        overflowX: 'scroll' as const,\n        verticalAlign: 'text-bottom',\n    },\n    describe_img_wrapper: {\n        maxWidth: '100px',\n        margin: '40px auto',\n    },\n    describe_img: {\n        width: '100%',\n        height: '100%',\n        background: '#282c34',\n    },\n    describe_img_footnote: {\n        textAlign: 'center' as const,\n        fontSize: '11px',\n    }\n}\n\nexport default styles;","/**** \n * improve: \n *  - [x] every button instance of this componet  must create its own isLoading and setIsLoading, this is ugly and unacceptable.\n *  - [ ] should provide css customize option for user\n *  - [ ] try export this as a standalone button for re-use\n */\nimport React, {useState, useEffect, useRef, CSSProperties} from \"react\";\nimport commonStyle from \"./common_style\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./button.css\";\n\nexport type Props = {\n    custom_style?: CSSProperties\n    isLoading?: boolean\n    text: string\n    onClick: () => void\n}\n\nconst styles = {...commonStyle, ...{\n    loader: {\n        border: '4px solid rgba(60, 198, 138, 0.2)',\n        borderLeft: '4px solid',\n        animation: 'load 1s infinite linear',\n        borderRadius: '50%',\n        width: '25px',\n        height: '25px',\n        margin: '0 auto'\n    },\n    btn: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: 'rgb(255,255,255, 0)',\n        cursor: 'pointer'\n    },\n    btndiv: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%'\n    },\n    btn_hover: {\n        padding: '0.5rem 1rem',\n        fontSize: '12px',\n        color: 'white',\n        borderRadius: '6px',\n        border: '1px solid ' + commonStyle.main_color.color,\n        outline:'none',\n        backgroundColor: commonStyle.main_color.color,\n        cursor: 'pointer'\n    }\n}}\n\nconst Loader = () => <div style={styles.loader} />;\n\nexport default function FreshButton(props: Props){\n\n    /* Capture the dimensions of the button before the loading happens\n    so it doesn’t change size when showing the loader */\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n    const ref = useRef<HTMLButtonElement>(null);\n\n\n    const isLoadingMissed = props.isLoading === undefined;\n\n    const [showLoader, setShowLoader] = useState(false);\n    const [isLoading, setIsLoading] = useState( isLoadingMissed ? false : props.isLoading);\n    const [isHover, setIsHover] = useState(false);\n\n    const extendedOnClick = async () => {\n      if(isLoadingMissed)setIsLoading(true);\n      await props.onClick();\n      if(isLoadingMissed)setIsLoading(false);\n    }\n\n    useEffect(() => {\n        if(props.isLoading !== undefined)\n          setIsLoading(props.isLoading);\n\n        if (isLoading) {\n          setShowLoader(true);\n        }\n    \n        // Show loader a bits longer to avoid loading flash\n        if (!isLoading && showLoader) {\n          const timeout = setTimeout(() => {\n            setShowLoader(false);\n          }, 400);\n    \n          return () => {\n            clearTimeout(timeout);\n          };\n        }\n      }, [props.isLoading, isLoading, showLoader]);\n  \n    // Hooks used to fade in/out the loader or the button contents\n    const fadeOutProps = useSpring({ opacity: showLoader ? 1 : 0 });\n    const fadeInProps = useSpring({ opacity: showLoader ? 0 : 1 });\n    \n    /*\n    useEffect(() => {\n        if (ref.current && ref.current.getBoundingClientRect().width) {\n          setWidth(ref.current.getBoundingClientRect().width);\n        }\n        if (ref.current && ref.current.getBoundingClientRect().height) {\n          setHeight(ref.current.getBoundingClientRect().height);\n        }\n      }, [props.text]);\n    */\n\n    const toogleHover = () => {\n        setIsHover(!isHover);\n    }\n\n    const wh_style = width && height\n    ? {\n        width: `${width}px`,\n        height: `${height}px`,\n      }\n    : {};\n    const hover_style = isHover ? styles.btn_hover : styles.btn;\n    const btn_style = {...hover_style, ...wh_style};\n    const mystyle = props.custom_style === \"undefined\" ? {} : props.custom_style; \n    const final_style = {...btn_style, ...mystyle};\n\n    return(\n      <button style={final_style} onClick={extendedOnClick} onMouseEnter={toogleHover} onMouseLeave={toogleHover} ref={ref} >\n      {showLoader ? (\n            <animated.div style={fadeOutProps}>\n              <Loader />\n            </animated.div>\n          ) : (\n            <animated.div style={fadeInProps}>{props.text}</animated.div>\n      )}\n      </button>\n    )\n}","import React, { useRef, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './notify.css';\nimport commomStyle from '../widget/common_style';\n\nconst styles = {...commomStyle, ...{\n    panel: {\n        //maxWidth: \"700px\",\n    },\n    toast: {\n        padding: '10px',\n        fontSize: '14px',\n        \n    }\n}};\n\nexport default function NotifyPlace(){\n    return(\n        <div>\n            <ToastContainer style={styles.panel} toastStyle={styles.toast} />\n        </div>\n    )\n}\n\nexport type MsgType = 'error' | 'success' | 'info' | 'warning' | 'dark';\n\nconst notify = (message: string, type?: MsgType) => {\n    switch (type) {\n        case 'error':\n            toast.error(message);\n            break;\n        \n        case 'success':\n            toast.success(message);\n            break;\n        \n        case 'warning':\n            toast.warn(message);\n            break;\n        \n        case 'info':\n            toast.info(message);\n            break;\n\n        case 'dark':\n            toast.dark(message);\n            break;\n\n        default:\n            toast.error(message);\n            break;\n    }\n}\n\nexport { notify }","import React, { useEffect, useRef, useState } from 'react';\nimport './Home.css';\nimport Api from '../../api/index';\nimport FreshButton from '../widget/fresh_button';\nimport NotifyPlace, {notify} from '../widget/notify';\nimport { MsgSignType  } from '../../types/polyjuice';\nimport { Grid } from '@material-ui/core';\nimport common_styles from '../widget/common_style';\nimport utils from '../../utils/index';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { gruvboxDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\ndeclare global {\n  interface Window { ethereum: any; }\n}\n\nconst styles = {...common_styles, ...{\n  header: {\n    minHeight: '300px',\n    margin: '10px',\n  },\n  address: {\n    color: '#a0eec0',\n  },\n  balance: {\n    color: 'whitesmoke',\n  },\n  button: {\n    fontSize: '25px',\n    width: '100%',\n    maxWidth: '700px',\n    margin: '10px',\n    padding: '0.7rem 1.2rem',\n  },\n  contract_container: {\n    width: '100%',\n    maxWidth: '700px',\n    margin: '30px auto',\n    textAlign: 'left' as const,\n    fontSize: '15px',\n    border: '1px solid gray',\n    color: 'gray',\n  },\n  contract_li: {\n    listStyleType: 'none' as const,\n  }\n}\n}\n\nfunction Home() {\n  const inputFile = useRef<HTMLInputElement>(null);\n  const [selectedAddress, setSelectedAddress] = useState<string>();\n  const [balance, setBalance] = useState<string>('0');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [deployedContracts, setDeployedContracts] = useState<string[]>([]);\n  const [rollupTypeHash, setRollupTypeHash] = useState<string>();\n\n  useEffect(() => {\n    // connect account\n    if(window.ethereum){\n      window.ethereum.request({ method: 'eth_requestAccounts' });\n      setSelectedAddress(window.ethereum.selectedAddress);\n    };\n    getRollupTypeHash();\n  }, []);\n\n  useEffect(() => {\n    if(selectedAddress){\n      getBalance();\n    };\n  }, [selectedAddress]);\n\n  // detect metamask account changes.\n  window.ethereum.on('accountsChanged', function (accounts: any) {\n    setSelectedAddress(accounts[0]);\n  });\n\n  const getBalance = async () => {\n    if(!selectedAddress)return;\n    const api = new Api();\n    try {\n      const res = await api.getBalance(selectedAddress);\n      if(res.status !== 'ok')\n        return notify(`failed to get balance from account. ${JSON.stringify(res.error)}`);\n      setBalance(utils.shannon2CKB(res.data));\n    } catch (error) {\n      notify(JSON.stringify(error));\n    }\n  }\n\n  const getRollupTypeHash = async () => {\n    const api = new Api();\n    try {\n      const res = await api.getRollupTypeHash();\n      if(res.status !== 'ok')\n        return notify(`failed to get rollup type hash. ${JSON.stringify(res.error)}`);\n      setRollupTypeHash(res.data);\n    } catch (error) {\n      notify(JSON.stringify(error));\n    } \n  }\n\n  const deposit =  async () => {\n    if(!selectedAddress)return notify(`metamask account not found.`);\n    const api = new Api();\n    try {\n      const res = await api.deposit(selectedAddress);\n      console.log(res);\n      if(res.status === 'ok'){\n        notify(`your account id: ${res.data.account_id}`, 'success');\n        getBalance();\n      }else{\n        notify(JSON.stringify(res.error));\n      }\n    } catch (error) {\n      notify(JSON.stringify(error));\n    }\n  }\n\n  const clickUploadContract = async () => {\n    if(!inputFile)return notify(`input ref not found.`);\n    inputFile.current!.click();\n  } \n\n  const _deployContract = async (contractCode: string) => {\n    if(!contractCode)return notify(`upload contract binary file first!`);\n    if(!selectedAddress)return notify(`window.ethereum.selectedAddress not found.`);\n\n    const api = new Api();\n    try {\n      const res = await api.deployContract(contractCode, window.ethereum.selectedAddress);\n      if(res.status !== 'ok')return notify(JSON.stringify(res));\n\n      const data: MsgSignType = res.data;\n      var signature;\n      try {\n        signature = await window.ethereum.request({\n          method: 'personal_sign',\n          params: [data.message, window.ethereum.selectedAddress],\n        }); \n      } catch (error) {\n        console.log(error);\n        return notify(`could not finished signing process. \\n\\n ${JSON.stringify(error)}`);\n      }\n\n      // submit the signed tx to godwoken\n      const tx_res = await api.sendL2Transaction(data.raw_l2tx, signature, data.type, data.l2_script_args);\n      if(tx_res.status !== 'ok'){\n        console.log(tx_res);\n        return notify(JSON.stringify(tx_res.error));\n      }\n\n      console.log(tx_res.data);\n      notify(`your contract address: ${tx_res.data.contract_address}`, 'success');\n      setDeployedContracts(oldArray => [...oldArray, tx_res.data.contract_address]);\n    } catch (error) {\n      notify(JSON.stringify(error));\n    }\n  }\n\n  const deployContract = async (e: any) => {\n    const codefile = e.target.files[0]; \n    setIsLoading(true);\n    const res: any = await readContractCode(codefile);\n    if(res.status !== 'ok'){\n      setIsLoading(false);\n      return notify(`can not read contract code from file.`);\n    };\n\n    const code_hex = res.data;\n    console.log(code_hex);\n    await _deployContract(code_hex);\n    setIsLoading(false);\n  }\n\n  const readContractCode = (codefile: Blob) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (event: any) => {\n            const code_hex = `0x${event.target.result}`;\n            resolve({status:'ok', data: code_hex});\n        };\n        reader.onerror = (err) => {\n            resolve({status:'failed', error: err});\n        };\n        reader.onabort = () => {\n          resolve({status:'failed', error: 'user abort.'});\n        }\n        reader.readAsBinaryString(codefile);\n    });  \n  } \n\n  const web3CodeString = `\n  const godwoken_rpc_url = 'http://127.0.0.1:8119';\n  const provider_config =  {\n    godwoken: {\n        rollup_type_hash: \"${rollupTypeHash}\",\n        layer2_lock: {\n            code_hash: \"0x0000000000000000000000000000000000000000000000000000000000000001\",\n            hash_type: \"data\"\n        }\n    }\n  }\n  const provider = new PolyjuiceHttpProvider(godwoken_rpc_url, provider_config);\n  const web3 = new Web3(provider);\n                  `\n\n  return (\n    <div>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NotifyPlace />\n          <Grid container spacing={3}>\n            <Grid item xs={12} style={styles.header}>\n              <h3> {selectedAddress} </h3>\n              <div><span style={styles.balance}>{balance} CKB </span></div>\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deposit\"} onClick={deposit} custom_style={styles.button} />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FreshButton text={\"Deploy Contract\"} isLoading={isLoading} onClick={clickUploadContract} custom_style={styles.button} />\n              <input\n                  type=\"file\"\n                  ref={inputFile}\n                  onChange={deployContract}\n                  hidden\n              />\n            </Grid>\n          </Grid>\n\n          <hr></hr>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12} style={styles.contract_container}>\n\n              Web3.js init code: \n              <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n                {web3CodeString}\n              </SyntaxHighlighter>\n\n              Contract Address: \n              <SyntaxHighlighter language=\"javascript\" style={gruvboxDark}>\n                {deployedContracts.join('\\n')}\n              </SyntaxHighlighter>\n\n            </Grid>\n          </Grid>\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from './components/home/Home';\n\n\nexport default function MyRouter() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/'>\n          <Home></Home>\n        </Route>\n     </Switch> \n    </BrowserRouter>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyRouter from './router';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}